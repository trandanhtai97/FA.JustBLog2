@model PostViewModel

@{
    ViewBag.Title = "Create Post";
}

<h2 class="text-center mt-4 mb-5">Create Post</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label font-weight-bold" })
                <div>
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @oninput = "convertToSlug()" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.UrlSlug, htmlAttributes: new { @class = "control-label font-weight-bold" })
                <div>
                    @Html.EditorFor(model => model.UrlSlug, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.UrlSlug, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label font-weight-bold" })
                <div>
                    @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label font-weight-bold" })
                <div>
                    @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label font-weight-bold" })
                <div>
                    @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Categories, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-2">
                <label class="control-label font-weight-bold" for="Tag">Tags</label>
                <div class="">
                    @Html.ListBoxFor(model => model.SelectedTagIds, Model.Tags, new { @class = "select-tag-multiple w-100" })
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label font-weight-bold" })
                <div>
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Published)
                        @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.PostContent, htmlAttributes: new { @class = "control-label font-weight-bold" })
                <div>
                    @Html.TextAreaFor(model => model.PostContent, htmlAttributes: new { @id = "editor", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PostContent, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-secondary mr-3" })
            <button type="submit" class="btn btn-info">
                Create
            </button>
        </div>
    </div>
    <script>
        ClassicEditor
            .create(document.querySelector('#editor'))
            .catch(error => {
                console.error(error);
            });
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
