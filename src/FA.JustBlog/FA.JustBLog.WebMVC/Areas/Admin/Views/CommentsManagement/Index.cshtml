@model Paginated<Comment>

@{
    ViewBag.Title = "Comment Management";
}
<h2 class="text-center">Comment Management</h2>
<h4 class="text-success time-hide">@TempData["Message"]</h4>
@*<div class="btn btn-primary mb-3">
    @Html.ActionLink("Create New", "Create", null, new { @class = "text-white text-decoration-none" })
</div>*@
<form action="@Url.Action("Index", "CommentsManagement")" method="get" class="form-inline float-right">
    <div class="form-group mx-md-3 mb-2">
        <input type="text" class="form-control mr-3" id="inputSearch" name="SearchString" value="@ViewData["currentFilter"]" placeholder="Input....">
        <button type="submit" class=" form-control btn btn-primary">
            <i class="fas fa-search"></i>
        </button>
    </div>
</form>

<table class="table table-bordered table-dark">
    <thead>
        <tr class="text-center">
            <th scope="col">
                <a href="@Url.Action("Index", "CommentsManagement", new { sortOrder = ViewData["TagNameSortParm"], currentFilter = ViewData["CurrentFilter"] })">Name</a>
            </th>
            <th scope="col">
                <a href="@Url.Action("Index", "CommentsManagement", new { sortOrder = ViewData["EmailSortParm"], currentFilter = ViewData["CurrentFilter"] })">Email</a>
            </th>
            <th scope="col">
                <a href="@Url.Action("Index", "CommentsManagement", new { sortOrder = ViewData["TitleSortParm"], currentFilter = ViewData["CurrentFilter"] })">Post Title</a>
            </th>
            <th scope="col">
                <a href="@Url.Action("Index", "CommentsManagement", new { sortOrder = ViewData["CommentHeaderSortParm"], currentFilter = ViewData["CurrentFilter"] })">Comment Header</a>
            </th>
            <th scope="col">
                <a href="@Url.Action("Index", "CommentsManagement", new { sortOrder = ViewData["CommentTextSortParm"], currentFilter = ViewData["CurrentFilter"] })">Comment Text</a>
            </th>
            <th scope="col">
                <a href="@Url.Action("Index", "CommentsManagement", new { sortOrder = ViewData["CommentTimeSortParm"], currentFilter = ViewData["CurrentFilter"] })">Comment Time</a>
            </th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.Post.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.CommentHeader)</td>
                <td>@Html.DisplayFor(modelItem => item.CommentText)</td>
                <td>@Html.DisplayFor(modelItem => item.CommentTime)</td>
                <td class="d-flex">
                    @*<a href="@Url.Action("Edit", "CommentsManagement", new { id = item.Id})" class="btn btn-primary mr-3">Edit</a>*@
                    <form action="@Url.Action("Delete", "CommentsManagement", new{ id = item.Id })" method="post">
                        <button type="submit" onclick="return confirm('Are you sure to delete this comment?');" class="bg-transparent border-0 text-danger"><i class="far fa-trash-alt"></i></button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center font-weight-bold">
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            ViewBag.PageRange = 3;
        }
        <li class="page-item">
            <a href="@Url.Action("Index", "CommentsManagement", new { sortOrder=ViewData["CurrentSort"], pageIndex=1, currentFilter=ViewData["CurrentFilter"] })"
               class="btn page-link @prevDisabled"><<</a>
        </li>
        <li class="page-item">
            <a href="@Url.Action("Index", "CommentsManagement", new { sortOrder=ViewData["CurrentSort"], pageIndex=(Model.PageIndex - 1 <= 0 ? 1 : Model.PageIndex - 1), currentFilter=ViewData["CurrentFilter"] })"
               class="btn page-link @prevDisabled"><</a>
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i >= Model.PageIndex - ViewBag.PageRange && i <= Model.PageIndex + ViewBag.PageRange)
            {
                <li class="page-item @(i==Model.PageIndex ? "active" : "")">
                    <a class="@(i==Model.PageIndex ? "Current" : "") page-link"
                       href="@Url.Action("Index", "CommentsManagement", new { sortOrder=ViewData["CurrentSort"], pageIndex=i, currentFilter=ViewData["CurrentFilter"] })">@i</a>
                </li>
            }
        }
        <li class="page-item">
            <a href="@Url.Action("Index", "CommentsManagement", new { sortOrder=ViewData["CurrentSort"], pageIndex=(Model.PageIndex + 1 > Model.TotalPages ? Model.TotalPages : Model.PageIndex + 1), currentFilter=ViewData["CurrentFilter"] })"
               class="btn page-link @nextDisabled">></a>
        </li>
        <li class="page-item">
            <a href="@Url.Action("Index", "CommentsManagement", new { sortOrder=ViewData["CurrentSort"], pageIndex=(Model.TotalPages), currentFilter=ViewData["CurrentFilter"] })"
               class="btn page-link @nextDisabled">>></a>
        </li>
    </ul>
</nav>